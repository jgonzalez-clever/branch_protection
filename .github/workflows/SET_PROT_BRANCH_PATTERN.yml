
name: Set Branch Protection Pattern

on:
  workflow_dispatch:

jobs:
  Branch-Protection:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - id: read-json-config
        run: echo "BRANCH_CONFIGURATION=$(jq -c . < ./branch_protection.json)" >> $GITHUB_OUTPUT

      - name: Set branch protection rules on selected reposiories
        run: |
          # LISTAR REPOS
          REPOS=$(jq -r '.repositories[].repo_name' repositoriesPattern.json) && echo $repo_name
          owner=$(jq -r '.owner' repositoriesPattern.json) && echo $owner
          branches_repo1=$(jq -r '.repositories[] | select(.repo_name == "repo1") | .branches[].branch_name' repositoriesPattern.json)
          echo "$branches_repo1"
                  
          # LOOP DE REPOS
          for u in $REPOS
          do
            echo $u
            echo $ownerbranches_repo1=$(jq -r '.repositories[] | select(.repo_name == "repo1") | .branches[].branch_name' repositoriesPattern.json)

           
            # CARGAR LAS BRANCHES EN UN TXT
            curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/$owner/$u/branches" | jq -r '.[].name' > BRANCHES.txt
            cat BRANCHES.txt
            
            # CARGAR SI LAS BRANCHES ESTAN PROTEGIDAS EN UN TXT
            curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/$owner/$u/branches" | jq -r '.[].protected' > IS_PROTECTED.txt
            cat IS_PROTECTED.txt 

            # VARIABLE DEFAULT BRANCH (SE LE CONFIGURA PROTECTED BRANCH POR DEFAULT) - NOMBRE DE DEFAULT BRANCH
            export DEFAULT_BRANCH=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/$owner/$u" | jq -r '.default_branch')
            
            # VARIABLE NUMERO DE BRANCHES
            export NUMBER_OF_BRANCHES=$(awk 'END {print NR}' BRANCHES.txt)
            

          REPOSITORY_ID=$(curl -s -H "Authorization: bearer ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$owner/$u" \
            | jq -r '.node_id')

          # Crear la protecci√≥n de rama utilizando el nuevo ID
          curl -X POST \
            -H "Authorization: bearer ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/graphql" \
            -d '{
              "query": "mutation CreateBranchProtectionRule($input: CreateBranchProtectionRuleInput!) { createBranchProtectionRule(input: $input) { branchProtectionRule { id } } }",
              "variables": {
                "input": {
                  "repositoryId": "'"$REPOSITORY_ID"'",
                  "pattern": "'"$u/*"'",
                  "requiredApprovingReviewCount": 1,
                  "dismissesStaleReviews": true,
                  "requiresCodeOwnerReviews": true,
                  "isAdminEnforced": true,
                  "requiredStatusCheckContexts": ["ci"]
                }
              }
            }'





            # LOOP QUE ITERA POR TODAS LAS BRANCHES
            echo "debug"
            for i in $(seq 1 $NUMBER_OF_BRANCHES)
            do
              # CONDICIONAL - SI LA BRANCH ESTA PROTEGIDA
              if [[ $(awk -v i=$i 'NR==i' IS_PROTECTED.txt) == false ]]
              then
                # EXPORTAR NOMBRE DE LA BRANCH PROTEGIDA
                export BRANCH=$(awk -v i=$i 'NR==i' BRANCHES.txt)
                # CONFIGURAR LA PROTECCION DESEADA
                echo "debug 2"
                curl -L -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/$owner/$u/branches/$BRANCH/protection" -d '${{ steps.read-json-config.outputs.BRANCH_CONFIGURATION }}'
              fi
            done

          # SE LE CONFIGURA LA PROTECCION DESEADA A LA DEFAULT BRANCH FUERA DEL BUCLE (YA QUE HAY SITUACIONES EN EL QUE LA DEFAULT BRANCH NO ESTA PROTEGIDA Y EL LOOP LO VA A OMITIR
          curl -L -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/$owner/$u/branches/$DEFAULT_BRANCH/protection" -d '${{ steps.read-json-config.outputs.BRANCH_CONFIGURATION }}'
          # SE ELIMINAN LOS ARCHIVOS TXT GENERADOS
          rm BRANCHES.txt IS_PROTECTED.txt
          
          done

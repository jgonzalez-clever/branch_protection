
name: Set Branch Protection Pattern

on:
  workflow_dispatch:

jobs:
  Branch-Protection:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - id: read-json-config
        run: echo "BRANCH_CONFIGURATION=$(jq -c . < ./branch_protection.json)" >> $GITHUB_OUTPUT

      - name: Set branch protection rules on selected reposiories
        run: |
          # LISTAR REPOS
          REPOS=$(jq -r '.repositories[].repo_name' repositoriesPattern.json)
          OWNER=$(jq -r '.owner' repositoriesPattern.json)

          # LOOP DE REPOS
          for repo_name in $REPOS
          do
            branches_count=$(jq -r '.repositories[] | select(.repo_name == "'"$repo_name"'") | .branches | length' repositoriesPattern.json)

            # Obtener el ID del repositorio
            REPOSITORY_ID=$(jq -r '.repositories[] | select(.repo_name == "'"$repo_name"'") | .id' repositoriesPattern.json)

            # LOOP DE BRANCHES
            for ((i=0; i<$branches_count; i++))
            do
              BRANCH=$(jq -r '.repositories[] | select(.repo_name == "'"$repo_name"'") | .branches['"$i"'].branch_name' repositoriesPattern.json)

              # Crear la protecciÃ³n de rama utilizando el nuevo ID
              curl -X POST \
                -H "Authorization: bearer ${{ secrets.GH_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Content-Type: application/json" \
                "https://api.github.com/graphql" \
                -d '{
                  "query": "mutation CreateBranchProtectionRule($input: CreateBranchProtectionRuleInput!) { createBranchProtectionRule(input: $input) { branchProtectionRule { id } } }",
                  "variables": {
                    "input": {
                      "repositoryId": "'"$REPOSITORY_ID"'",
                      "pattern": "'"$BRANCH"'",
                      "requiredApprovingReviewCount": 1,
                      "dismissesStaleReviews": true,
                      "requiresCodeOwnerReviews": true,
                      "isAdminEnforced": true,
                      "requiredStatusCheckContexts": ["ci"]
                    }
                  }
                }'
            done
          done
